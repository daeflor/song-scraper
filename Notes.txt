***** Notes *****

** TODOs **

	- popup.html    : 1
	- content.js    : 14
	- popup.js      : 15
	- TabManager.js : 1
	- Style.css     : 3

** Bugs **

	- Hit an issue where the same song showed up under Removed and Added, for unknown reasons. May be resolved by showing all info for the songs that have been removed/added. 
	- First time saving playlist very briefly shows the added/removed section before hiding it.
	- The popup is sometimes cut off. (Should be bypassed now).
	- If multiple playlists have the same name, their info will likely just get overridden. 
	- The comparison can be wrong about which specific track was removed from a playlist. This happens when there were duplicates and only the earlier (lower index) of the two tracks was removed. 
	- Getting playlist name currently doesn't work if there's a hyphen in the name 
	- Border around track tables isn't perfect (when scrolling)
	- Open the queue, change the playlist, run the comparison -> it gets stuck in an infinite loop (thinks there are more songs than there are)
	- When you press 'Back' it shows the 'Loading...' text flickering. (Might not need to show it at all).
	- The music page does not always refresh after adding a song, so the displayed trackcount is less than the actual count. Popup returns an error so no user-facing harm.


** Upcoming To-Do List **

	- Finalize / clean-up support for 'All Songs'
	- Scrub Hot Jams
	- Add total count of songs added/removed after comparison
	- Add song duration to info saved in storage


** Style & Organization **

	- Differentiate content script methods from similarly named Popup methods
	- MVC and other organization possibilities
	- Create a new chart (digital?) for the app layout	
	- Look into 'use strict mode', and consider using a Linter (https://www.sitepoint.com/comparison-javascript-linting-tools/)
	- Consider Grunt or something similar to merge all files into one


** Features **

V1:	
	- Store a list of all Playlists and check that the list of playlists is up to date. Let the user know if it's not. 
	- - Would it be possible to use this in order to scrub out all the old unused lists saved in Local Storgae?
	- ! Show the total number of tracks added/removed when it displays the track lists
	- Ask user if they want to overwrite existing saved track list data (may not be needed now that backups exist)
	- ! Google music css variable names mapping
	- ! Error handling method for all the page css variable getters/queries
	- ! Include the Song Duration/Length when saving tracklists !
	- Option to backup all extisting track lists with current date (similar to JSON idea)
	- Option to change a playlist's name
	- ! Re-organize files into more logical order, and maybe break up into additional files
	- When storing a list, could store the timestamp so you can see the lastUsed date and then auto-delete anything no longer in use
	- If all the playlists in Storage are children of a parent object, do they all need the id in their name? Is that even how it works right now?
	- Could check count of songs in list before saving to storage, to verify it matches the playlist track count (to avoid edge case infinite loop)
	- Would be nice to know if the position of a track in a playlist has changed

V2:
	- Have the user's track list info be accessible across devices so they can use the extension from anywhere
		- Extension Sync storage may not work because of the quota limits. 
		- Could consider Google Drive integration, or switching to a Packaged App
	- Allow user to save more than just playlists (e.g. All songs added to library, Uploaded & Purchased songs, and Subscription songs).
		- These all use this url: https://play.google.com/music/listen?u=0#/all
		- Made complicated because none of these lists have song index numbers, and the latter two don't have track counts
		- Would have to make sure to be able to distinguish these from playlists (e.g. what if a playlist is also called "Songs"?)
		- Consider using a different method to determine when you're at the bottom of the page/window, and maybe just use all track info to compare and find duplicates
	- Only store ONE object for the extension. And that object contains all the others... scary. 
		- This probably won't work because of the QUOTA_BYTES_PER_ITEM limit. 
	- Progress bar
	- Support comparison between Spotify playlists and google music (allowing the user to choose tracklist x and y to compare)
	- Consider feature which suggests listening to one of the albums/tracks in the 'test' playlists. 
	- Unit tests?	
	- Store an "all tracks removed" list and allow the user to select if they want to add them to that list or not after it lists which have been removed
	- Consider app vs extension possibilities
	- Feature that checks for duplicates
	- Could add buttons to the Google Music site itself (e.g. to go directly to Genres)?

