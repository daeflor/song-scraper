***** Notes *****

** TODOs **

	- content.js : 8
	- popup.js 21

** Bugs **

	- Hit an issue where the same song showed up under Removed and Added, for unknown reasons. May be resolved by showing all info for the songs that have been removed/added. 
	- First time saving playlist very briefly shows the added/removed section before hiding it.
	- The popup is sometimes cut off. 
	- If multiple playlists have the same name, their info will likely just get overridden. 
	- The comparison can be wrong about which specific track was removed from a playlist. This happens when there were duplicates and only the earlier (lower index) of the two tracks was removed. 
	- Getting playlist name currently doesn't work if there's a hyphen in the name 
	- Border around track tables isn't perfect (when scrolling)
	- - No longer detects if a song is playing properly - re-consider design
	- "Song list comparison in progress" text does not go away properly after comparison is complete
	
	
** Features **

V1:	
	- Store a list of all Playlists and check that the list of playlists is up to date. Let the user know if it's not. 
	- May want to allow user to be playing audio when they use the extension (need different way of getting playlist name)
	- Have a better indicator that the compare button is disabled while the comparison is running. 
	- Show the total number of tracks added/removed when it displays the track lists
	- Ask user if they want to overwrite existing saved track list data
	- ! Google music css variable names mapping
	- Error handling method for all the page css variable getters/queries
	- ! Include the Song Duration/Length when saving tracklists !
	- Option to backup all extisting track lists with current date
	- Option to change a playlist's name
    - Since a tab can't change while using the popup, can we have a global/const tab id and playlist key? 
       - Maybe have a global var (namespace?) that has various children? (e.g. tab, playlist name, key). 
    - Create a new chart (digital?) for the app layout
	- Re-organize files into more logical order, and maybe break up into additional files
	- Make a method that stores an object in storage, to avoid repeated code
	- After running a backup, should have a 'back' button (or not hide the other buttons)
	- Should Tab Management be moved to a separate file? Would that avoid global variable?

V2:
	- Have the user's track list info be accessible across devices so they can use the extension from anywhere
		- Extension Sync storage may not work because of the quota limits. 
		- Could consider Google Drive integration, or switching to a Packaged App
	- Allow user to save more than just playlists (e.g. All songs added to library, Uploaded & Purchased songs, and Subscription songs).
		- These all use this url: https://play.google.com/music/listen?u=0#/all
		- Made complicated because none of these lists have song index numbers, and the latter two don't have track counts
		- Would have to make sure to be able to distinguish these from playlists (e.g. what if a playlist is also called "Songs"?)
		- Consider using a different method to determine when you're at the bottom of the page/window, and maybe just use all track info to compare and find duplicates
	- Only store ONE object for the extension. And that object contains all the others... scary. 
		- This probably won't work because of the QUOTA_BYTES_PER_ITEM limit. 
	- Progress bar
	- Support comparison between Spotify playlists and google music (allowing the user to choose tracklist x and y to compare)
	- Consider feature which suggests listening to one of the albums/tracks in the 'test' playlists. 
	- Unit tests?	
	- Store an "all tracks removed" list and allow the user to select if they want to add them to that list or not after it lists which have been removed
	- Consider app vs extension possibilities
	- Feature that checks for duplicates
	- Could add buttons to the Google Music site itself (e.g. to go directly to Genres)?
	

** Tasks **

	- Save all playlists
	- Consider having all projects in one repo, under different branches


** Style **

	- Differentiate content script methods from similarly named Popup methods
	- MVC